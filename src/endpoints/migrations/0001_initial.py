# Generated by Django 3.2.9 on 2021-12-28 13:22

from django.db import migrations, models
import django.db.models.deletion
import endpoints.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('solutions', '0002_auto_20211209_1808'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessToVirtualResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_to_virtual_sources', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': '2. Access to Virtual Sources',
            },
        ),
        migrations.CreateModel(
            name='AudioType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='NetworkMediaType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SwitchingControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switching_control', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.SlugField(max_length=20, verbose_name='SKU')),
                ('status', models.CharField(choices=[('Available', 'Available'), ('EOL', 'End of Life')], default='Available', max_length=20)),
                ('description', models.TextField(blank=True, default='Describe this Product here', max_length=1000, null=True)),
                ('summary', models.TextField(default='short summary', max_length=100)),
                ('main_image', models.ImageField(help_text='Upload a Photo with a General view', upload_to=endpoints.models.get_upload_to)),
                ('front_image', models.ImageField(help_text='Upload a Photo with a Frontal view', upload_to=endpoints.models.get_upload_to)),
                ('back_image', models.ImageField(help_text='Upload a Photo with a BackEnd view', upload_to=endpoints.models.get_upload_to)),
                ('test_var', models.CharField(choices=[('Available', 'Available'), ('EOL', 'End of Life')], default='Available', max_length=20)),
                ('endpoint_mode', models.CharField(choices=[('Transmitter', 'Transmitter'), ('Receiver', 'Receiver'), ('Tranceiver', 'Tranceiver')], max_length=15)),
                ('endpoint_type', models.CharField(choices=[('Hardware', 'Hardware'), ('Software', 'Software')], default='Hardware', max_length=10)),
                ('head_count', models.CharField(choices=[('Single', 'Single'), ('Dual', 'Dual')], default='Single', max_length=10)),
                ('max_resolution', models.CharField(choices=[('1080p30', '1080p30'), ('1080p60', '1080p60'), ('4K30', '4K30'), ('4K60', '4K60')], default='1080p60', max_length=10)),
                ('videotype', models.CharField(choices=[('VGA', 'VGA'), ('DVI', 'DVI'), ('HDMI', 'HDMI'), ('DisplayPort', 'DisplayPort')], default='Optimized', max_length=15)),
                ('compression', models.CharField(choices=[('Losless', 'Losless/Uncompressed'), ('Optimized', 'Optimized/Compressed')], default='Optimized', max_length=10)),
                ('max_videowall', models.CharField(choices=[('NotAvailable', 'Not available'), ('8x8', '8x8'), ('16x16', '16x16'), ('Unlimited', 'Unlimited')], max_length=30)),
                ('multiview', models.BooleanField(default=False)),
                ('displayport_mst', models.BooleanField(default=False, verbose_name='DisplayPort Multi-Stream Transport')),
                ('hdr', models.BooleanField(default=False, verbose_name='HDR')),
                ('interface', models.CharField(choices=[('1GbE', '1 GbE'), ('10GbE', '10 GbE'), ('Proprietary', 'Proprietary/Non-IP')], max_length=40)),
                ('port_redundancy', models.BooleanField(default=False, help_text='Select if the endpoint have more than 1 port for DATA TRANSFER')),
                ('poe', models.BooleanField(default=False, verbose_name='PoE support')),
                ('over_the_wan_support', models.BooleanField(default=False, verbose_name='Over-the-WAN support')),
                ('usb_speed', models.PositiveIntegerField(help_text='Enter USB speed in Mbps')),
                ('serial_routing', models.BooleanField(default=False, help_text='Select if the endpoint can route Serial data (i.e. RS232 etc.)')),
                ('infrared_routing', models.BooleanField(default=False)),
                ('access_to_virtual_sources', models.ManyToManyField(help_text='Select ALL that apply', to='endpoints.AccessToVirtualResources')),
                ('audio_type', models.ManyToManyField(help_text='Select ALL that apply', to='endpoints.AudioType')),
                ('media_type', models.ManyToManyField(help_text='Select ALL that apply', to='endpoints.NetworkMediaType')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solutions.solution')),
                ('switching_control', models.ManyToManyField(help_text='Select ALL that apply', to='endpoints.SwitchingControl')),
            ],
            options={
                'verbose_name_plural': '1. Endpoints',
            },
        ),
    ]
